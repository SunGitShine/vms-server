<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.vms.vendor.dao.VendorWhiteListMapper">
  <resultMap id="BaseResultMap" type="com.juma.vms.vendor.domain.VendorWhiteList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="vendor_id" jdbcType="INTEGER" property="vendorId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vendor_id
  </sql>
  <select id="selectByExample" parameterType="com.juma.vms.vendor.domain.VendorWhiteListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vendor_white_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vendor_white_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vendor_white_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.vms.vendor.domain.VendorWhiteListExample">
    delete from vendor_white_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.juma.vms.vendor.domain.VendorWhiteList" useGeneratedKeys="true">
    insert into vendor_white_list (vendor_id)
    values (#{vendorId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.juma.vms.vendor.domain.VendorWhiteList" useGeneratedKeys="true">
    insert into vendor_white_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vendorId != null">
        vendor_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vendorId != null">
        #{vendorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.vms.vendor.domain.VendorWhiteListExample" resultType="java.lang.Long">
    select count(*) from vendor_white_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vendor_white_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.vendorId != null">
        vendor_id = #{record.vendorId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vendor_white_list
    set id = #{record.id,jdbcType=INTEGER},
      vendor_id = #{record.vendorId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.vms.vendor.domain.VendorWhiteList">
    update vendor_white_list
    <set>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.vms.vendor.domain.VendorWhiteList">
    update vendor_white_list
    set vendor_id = #{vendorId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    insert into vendor_white_list
    (vendor_id) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.vendorId})
    </foreach>
  </insert>
  <update id="updateBatch" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update vendor_white_list
      <set>
        id = #{item.id},
        vendor_id = #{item.vendorId},
      </set>
      where id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update vendor_white_list
      <set>
        <if test="item.vendorId != null">
          vendor_id = #{item.vendorId,jdbcType=INTEGER},
        </if>
      </set>
      where id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>