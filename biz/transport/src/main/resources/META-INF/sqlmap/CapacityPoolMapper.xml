<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.vms.transport.dao.CapacityPoolMapper">
  <resultMap id="BaseResultMap" type="com.juma.vms.transport.domain.CapacityPool">
    <id column="capacity_pool_id" jdbcType="INTEGER" property="capacityPoolId" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="vendor_id" jdbcType="INTEGER" property="vendorId" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="truck_id" jdbcType="INTEGER" property="truckId" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="vehicle_box_type" jdbcType="INTEGER" property="vehicleBoxType" />
    <result column="vehicle_box_length" jdbcType="INTEGER" property="vehicleBoxLength" />
    <result column="vehicle_run_type" jdbcType="INTEGER" property="vehicleRunType" />
    <result column="go_city_license_type" jdbcType="INTEGER" property="goCityLicenseType" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="last_update_user_id" jdbcType="INTEGER" property="lastUpdateUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    capacity_pool_id, tenant_id, tenant_code, vendor_id, area_code, truck_id, driver_id, 
    vehicle_box_type, vehicle_box_length, vehicle_run_type, go_city_license_type, status, 
    is_delete, create_user_id, create_time, last_update_time, last_update_user_id
  </sql>
  <select id="selectByExample" parameterType="com.juma.vms.transport.domain.CapacityPoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from capacity_pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from capacity_pool
    where capacity_pool_id = #{capacityPoolId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from capacity_pool
    where capacity_pool_id = #{capacityPoolId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.vms.transport.domain.CapacityPoolExample">
    delete from capacity_pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="capacity_pool_id" keyProperty="capacityPoolId" parameterType="com.juma.vms.transport.domain.CapacityPool" useGeneratedKeys="true">
    insert into capacity_pool (tenant_id, tenant_code, vendor_id, 
      area_code, truck_id, driver_id, 
      vehicle_box_type, vehicle_box_length, vehicle_run_type, 
      go_city_license_type, status, is_delete, 
      create_user_id, create_time, last_update_time, 
      last_update_user_id)
    values (#{tenantId,jdbcType=INTEGER}, #{tenantCode,jdbcType=VARCHAR}, #{vendorId,jdbcType=INTEGER}, 
      #{areaCode,jdbcType=VARCHAR}, #{truckId,jdbcType=INTEGER}, #{driverId,jdbcType=INTEGER}, 
      #{vehicleBoxType,jdbcType=INTEGER}, #{vehicleBoxLength,jdbcType=INTEGER}, #{vehicleRunType,jdbcType=INTEGER}, 
      #{goCityLicenseType,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{isDelete,jdbcType=BIT}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{lastUpdateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="capacity_pool_id" keyProperty="capacityPoolId" parameterType="com.juma.vms.transport.domain.CapacityPool" useGeneratedKeys="true">
    insert into capacity_pool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="vendorId != null">
        vendor_id,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="truckId != null">
        truck_id,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="vehicleBoxType != null">
        vehicle_box_type,
      </if>
      <if test="vehicleBoxLength != null">
        vehicle_box_length,
      </if>
      <if test="vehicleRunType != null">
        vehicle_run_type,
      </if>
      <if test="goCityLicenseType != null">
        go_city_license_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="lastUpdateUserId != null">
        last_update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null">
        #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="truckId != null">
        #{truckId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="vehicleBoxType != null">
        #{vehicleBoxType,jdbcType=INTEGER},
      </if>
      <if test="vehicleBoxLength != null">
        #{vehicleBoxLength,jdbcType=INTEGER},
      </if>
      <if test="vehicleRunType != null">
        #{vehicleRunType,jdbcType=INTEGER},
      </if>
      <if test="goCityLicenseType != null">
        #{goCityLicenseType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUserId != null">
        #{lastUpdateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.vms.transport.domain.CapacityPoolExample" resultType="java.lang.Long">
    select count(*) from capacity_pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update capacity_pool
    <set>
      <if test="record.capacityPoolId != null">
        capacity_pool_id = #{record.capacityPoolId,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.vendorId != null">
        vendor_id = #{record.vendorId,jdbcType=INTEGER},
      </if>
      <if test="record.areaCode != null">
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.truckId != null">
        truck_id = #{record.truckId,jdbcType=INTEGER},
      </if>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleBoxType != null">
        vehicle_box_type = #{record.vehicleBoxType,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleBoxLength != null">
        vehicle_box_length = #{record.vehicleBoxLength,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleRunType != null">
        vehicle_run_type = #{record.vehicleRunType,jdbcType=INTEGER},
      </if>
      <if test="record.goCityLicenseType != null">
        go_city_license_type = #{record.goCityLicenseType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateUserId != null">
        last_update_user_id = #{record.lastUpdateUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update capacity_pool
    set capacity_pool_id = #{record.capacityPoolId,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=INTEGER},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      vendor_id = #{record.vendorId,jdbcType=INTEGER},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      truck_id = #{record.truckId,jdbcType=INTEGER},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      vehicle_box_type = #{record.vehicleBoxType,jdbcType=INTEGER},
      vehicle_box_length = #{record.vehicleBoxLength,jdbcType=INTEGER},
      vehicle_run_type = #{record.vehicleRunType,jdbcType=INTEGER},
      go_city_license_type = #{record.goCityLicenseType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_user_id = #{record.lastUpdateUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.vms.transport.domain.CapacityPool">
    update capacity_pool
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="truckId != null">
        truck_id = #{truckId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="vehicleBoxType != null">
        vehicle_box_type = #{vehicleBoxType,jdbcType=INTEGER},
      </if>
      <if test="vehicleBoxLength != null">
        vehicle_box_length = #{vehicleBoxLength,jdbcType=INTEGER},
      </if>
      <if test="vehicleRunType != null">
        vehicle_run_type = #{vehicleRunType,jdbcType=INTEGER},
      </if>
      <if test="goCityLicenseType != null">
        go_city_license_type = #{goCityLicenseType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUserId != null">
        last_update_user_id = #{lastUpdateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where capacity_pool_id = #{capacityPoolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.vms.transport.domain.CapacityPool">
    update capacity_pool
    set tenant_id = #{tenantId,jdbcType=INTEGER},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      vendor_id = #{vendorId,jdbcType=INTEGER},
      area_code = #{areaCode,jdbcType=VARCHAR},
      truck_id = #{truckId,jdbcType=INTEGER},
      driver_id = #{driverId,jdbcType=INTEGER},
      vehicle_box_type = #{vehicleBoxType,jdbcType=INTEGER},
      vehicle_box_length = #{vehicleBoxLength,jdbcType=INTEGER},
      vehicle_run_type = #{vehicleRunType,jdbcType=INTEGER},
      go_city_license_type = #{goCityLicenseType,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_user_id = #{lastUpdateUserId,jdbcType=INTEGER}
    where capacity_pool_id = #{capacityPoolId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="capacityPoolId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into capacity_pool
    (tenant_id,tenant_code,vendor_id,area_code,truck_id,driver_id,vehicle_box_type,vehicle_box_length,vehicle_run_type,go_city_license_type,status,is_delete,create_user_id,create_time,last_update_time,last_update_user_id) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.tenantId},#{item.tenantCode},#{item.vendorId},#{item.areaCode},#{item.truckId},#{item.driverId},#{item.vehicleBoxType},#{item.vehicleBoxLength},#{item.vehicleRunType},#{item.goCityLicenseType},#{item.status},#{item.isDelete},#{item.createUserId},#{item.createTime},#{item.lastUpdateTime},#{item.lastUpdateUserId})
    </foreach>
  </insert>
  <update id="updateBatch" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update capacity_pool
      <set>
        capacity_pool_id = #{item.capacityPoolId},
        tenant_id = #{item.tenantId},
        tenant_code = #{item.tenantCode},
        vendor_id = #{item.vendorId},
        area_code = #{item.areaCode},
        truck_id = #{item.truckId},
        driver_id = #{item.driverId},
        vehicle_box_type = #{item.vehicleBoxType},
        vehicle_box_length = #{item.vehicleBoxLength},
        vehicle_run_type = #{item.vehicleRunType},
        go_city_license_type = #{item.goCityLicenseType},
        status = #{item.status},
        is_delete = #{item.isDelete},
        create_user_id = #{item.createUserId},
        create_time = #{item.createTime},
        last_update_time = #{item.lastUpdateTime},
        last_update_user_id = #{item.lastUpdateUserId},
      </set>
      where capacity_pool_id = #{item.capacityPoolId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update capacity_pool
      <set>
        <if test="item.tenantId != null">
          tenant_id = #{item.tenantId,jdbcType=INTEGER},
        </if>
        <if test="item.tenantCode != null">
          tenant_code = #{item.tenantCode,jdbcType=VARCHAR},
        </if>
        <if test="item.vendorId != null">
          vendor_id = #{item.vendorId,jdbcType=INTEGER},
        </if>
        <if test="item.areaCode != null">
          area_code = #{item.areaCode,jdbcType=VARCHAR},
        </if>
        <if test="item.truckId != null">
          truck_id = #{item.truckId,jdbcType=INTEGER},
        </if>
        <if test="item.driverId != null">
          driver_id = #{item.driverId,jdbcType=INTEGER},
        </if>
        <if test="item.vehicleBoxType != null">
          vehicle_box_type = #{item.vehicleBoxType,jdbcType=INTEGER},
        </if>
        <if test="item.vehicleBoxLength != null">
          vehicle_box_length = #{item.vehicleBoxLength,jdbcType=INTEGER},
        </if>
        <if test="item.vehicleRunType != null">
          vehicle_run_type = #{item.vehicleRunType,jdbcType=INTEGER},
        </if>
        <if test="item.goCityLicenseType != null">
          go_city_license_type = #{item.goCityLicenseType,jdbcType=INTEGER},
        </if>
        <if test="item.status != null">
          status = #{item.status,jdbcType=BIT},
        </if>
        <if test="item.isDelete != null">
          is_delete = #{item.isDelete,jdbcType=BIT},
        </if>
        <if test="item.createUserId != null">
          create_user_id = #{item.createUserId,jdbcType=INTEGER},
        </if>
        <if test="item.createTime != null">
          create_time = #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.lastUpdateTime != null">
          last_update_time = #{item.lastUpdateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.lastUpdateUserId != null">
          last_update_user_id = #{item.lastUpdateUserId,jdbcType=INTEGER},
        </if>
      </set>
      where capacity_pool_id = #{item.capacityPoolId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>